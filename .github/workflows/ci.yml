name: Pipeline de CI/CD para Automação de Testes - Outsera

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-20.04

    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v2

      - name: Configurar Node.js e instalar dependências
        uses: actions/setup-node@v2
        with:
          node-version: '18' # Atualizando para a versão 18 para compatibilidade com dependências
      - run: npm ci # Reinstalar dependências no ambiente de destino de forma limpa

      - name: Instalar Cypress e Preprocessador Cucumber
        run: |
          npm install @badeball/cypress-cucumber-preprocessor --save-dev
          npx cypress install

      - name: Instalar dependências adicionais e CLI do Maestro
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libgtk-3-0 xvfb
          npm install -g maestro@2.1.1

      - name: Limpar relatórios anteriores
        run: |
          rm -rf cypress/reports/*
          rm -rf maestro-report/*
          rm -rf load-tests/load-test.json

      - name: Executar testes da API IBGE e testes E2E (Cucumber)
        run: |
          xvfb-run -a bash -c 'TEST_TYPE=api npx cypress run --spec "cypress/e2e/api-tests/ibge-api.cy.js" --reporter mochawesome --reporter-options reportDir=cypress/reports,overwrite=false,html=true,json=true'
          xvfb-run -a bash -c 'TEST_TYPE=e2e npx cypress run --spec "cypress/e2e/**/*.feature" --reporter mochawesome --reporter-options reportDir=cypress/reports,overwrite=false,html=true,json=true'

      - name: Fazer upload do Relatório Mochawesome
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: cypress/reports

      - name: Executar teste do Maestro
        run: |
          mkdir -p maestro-report
          npx maestro test maestro/app-release.apk --format junit --output maestro-report.xml || echo "Erro na execução do teste do Maestro"

      - name: Fazer upload do Relatório do Maestro
        if: success()
        run: |
          if [ -f maestro-report.xml ]; then
            echo "Relatório encontrado, iniciando upload"
            mv maestro-report.xml maestro-report/
          else
            echo "Relatório não encontrado, não será feito upload"
          fi

      - name: Instalar K6
        run: |
          sudo apt-get install -y gnupg software-properties-common
          curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
          echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Executar teste de carga com K6
        run: |
          k6 run load-tests/load-test.js --out json=load-tests/load-test.json

      - name: Fazer upload do Relatório de Teste de Carga
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: k6-report
          path: load-tests/load-test.json
