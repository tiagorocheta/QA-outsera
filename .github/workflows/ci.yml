name: Pipeline de CI/CD para Automação de Testes - Outsera

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-20.04

    steps:
      - name: Fazer checkout do repositório
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Instalar dependências
        run: npm install

      - name: Instalar Cypress
        run: npx cypress install

      - name: Executar testes da API IBGE
        run: |
          TEST_TYPE=api npx cypress run --spec "cypress/e2e/ibge-api.cy.js" || true # Permitir continuar mesmo em caso de erro

      - name: Executar testes E2E (Cucumber)
        run: |
          xvfb-run -a bash -c 'TEST_TYPE=e2e npx cypress run --spec "cypress/e2e/**/*.feature"' || true # Permitir continuar mesmo em caso de erro

      - name: Fazer upload do Relatório Mochawesome
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: cypress/reports
        continue-on-error: true # Ignorar erros ao fazer upload do relatório Mochawesome

      - name: Instalar CLI do Maestro
        run: npm install -g maestro@2.1.1
        continue-on-error: true # Ignorar erros ao instalar CLI do Maestro

      - name: Executar teste do Maestro
        run: |
          mkdir -p maestro-report
          npx maestro test maestro/app-release.apk --format junit --output maestro-report.xml || echo "Erro na execução do teste do Maestro"
        continue-on-error: true # Ignorar erros ao executar teste do Maestro

      - name: Fazer upload do Relatório do Maestro
        if: success()
        run: |
          if [ -f maestro-report.xml ]; then
            echo "Relatório encontrado, iniciando upload"
            mv maestro-report.xml maestro-report/
          else
            echo "Relatório não encontrado, não será feito upload"
          fi
        continue-on-error: true # Ignorar erros ao fazer o upload do relatório do Maestro

      - name: Instalar Preprocessador Cucumber
        run: npm install @badeball/cypress-cucumber-preprocessor --save-dev
        continue-on-error: true # Ignorar erros ao instalar preprocessador Cucumber

      - name: Instalar dependências adicionais
        run: |
          sudo apt-get update
          sudo apt-get install -y libgbm-dev libgtk-3-0 xvfb
        continue-on-error: true # Ignorar erros ao instalar dependências adicionais

      # Etapa do K6 desativada temporariamente para otimizar o tempo de execução
      # - name: Instalar K6
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y gnupg software-properties-common
      #     curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
      #     echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
      #     sudo apt-get update
      #     sudo apt-get install -y k6
      #   continue-on-error: true # Ignorar erros ao instalar K6

      # - name: Executar teste de carga com K6
      #   run: |
      #     k6 run load-tests/load-test.js --out json=load-tests/load-test.json
      #   continue-on-error: true # Ignorar erros ao executar teste de carga

      # - name: Fazer upload do Relatório de Teste de Carga
      #   if: success()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: k6-report
      #     path: load-tests/load-test.json
      #   continue-on-error: true # Ignorar erros ao fazer upload do relatório de teste de carga
