{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-26T22:08:26.803Z",
    "end": "2024-11-26T22:08:27.129Z",
    "duration": 326,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "84c1cbd6-e9ec-4224-8352-23ce8f3af50c",
      "title": "",
      "fullFile": "cypress/e2e/api-tests/ibge-api.cy.js",
      "file": "cypress/e2e/api-tests/ibge-api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c643133-fa3e-4da1-ad97-fa2e28db4dea",
          "title": "API IBGE - Testes de Estados",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve retornar todos os estados disponíveis",
              "fullTitle": "API IBGE - Testes de Estados Deve retornar todos os estados disponíveis",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/localidades/estados').then(response => {\n  validarResposta(response); // Valida o status e os headers\n  expect(response.body).to.be.an('array').and.to.have.length.greaterThan(0);\n  const estado = response.body[0];\n  // Verifica se os campos básicos do estado estão no retorno\n  expect(estado).to.have.keys(['id', 'nome', 'sigla', 'regiao']);\n});",
              "err": {},
              "uuid": "dbe87014-a1dd-41dc-9cfd-941d8dfc6cf9",
              "parentUUID": "2c643133-fa3e-4da1-ad97-fa2e28db4dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve retornar os detalhes do estado de São Paulo (ID: 35)",
              "fullTitle": "API IBGE - Testes de Estados Deve retornar os detalhes do estado de São Paulo (ID: 35)",
              "timedOut": null,
              "duration": 41,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/localidades/estados/35').then(response => {\n  validarResposta(response); // Mesma validação básica\n  expect(response.body).to.include({\n    id: 35,\n    nome: 'São Paulo',\n    sigla: 'SP'\n  });\n});",
              "err": {},
              "uuid": "7a46d8d8-2510-4e5b-96e7-6d2d5727833b",
              "parentUUID": "2c643133-fa3e-4da1-ad97-fa2e28db4dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve retornar 200 quando o estado não existe",
              "fullTitle": "API IBGE - Testes de Estados Deve retornar 200 quando o estado não existe",
              "timedOut": null,
              "duration": 40,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  url: '/localidades/estados/999',\n  failOnStatusCode: false // Evita que o teste falhe automaticamente\n}).then(response => {\n  expect(response.status).to.eq(200); // Verifica o status de não encontrado\n  expect(response.body).to.be.empty; // A API não deve retornar conteúdo para esse caso\n});",
              "err": {},
              "uuid": "b033e457-5461-4b47-a2b9-26c9a4d2eb96",
              "parentUUID": "2c643133-fa3e-4da1-ad97-fa2e28db4dea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve retornar erro 200 quando o ID do estado for inválido",
              "fullTitle": "API IBGE - Testes de Estados Deve retornar erro 200 quando o ID do estado for inválido",
              "timedOut": null,
              "duration": 40,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Devido a implantação da api, ela retorna 200 para quando nao encontrar o id especifico\ncy.request({\n  url: '/localidades/estados/abc',\n  // Um ID que não faz sentido\n  failOnStatusCode: false\n}).then(response => {\n  validarResposta(response); // Utilizando a função aqui\n  // Adicionar validações adicionais se necessário\n});",
              "err": {},
              "uuid": "971580e9-4efb-400a-972e-3c53ae68f76d",
              "parentUUID": "2c643133-fa3e-4da1-ad97-fa2e28db4dea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbe87014-a1dd-41dc-9cfd-941d8dfc6cf9",
            "7a46d8d8-2510-4e5b-96e7-6d2d5727833b",
            "b033e457-5461-4b47-a2b9-26c9a4d2eb96",
            "971580e9-4efb-400a-972e-3c53ae68f76d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}